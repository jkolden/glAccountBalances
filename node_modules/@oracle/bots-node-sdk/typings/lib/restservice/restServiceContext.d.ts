import { BaseContext } from '../component/baseContext';
import { MessagePayload } from '../message';
/**
 * The Bots RestServiceContext is a class for transforming the request and response of REST services
 * </p>
 * An RestServiceContext class instance is passed as an argument to every rest service event handler function.
 * @memberof module:Lib
 * @extends BaseContext
 * @alias RestServiceContext
 */
export declare class RestServiceContext extends BaseContext {
    private _restServiceContext;
    /**
     * Constructor of rest service context.
     * DO NOT USE - INSTANCE IS ALREADY PASSED TO EVENT HANDLERS
     * @param {object} request
     */
    constructor(request: any);
    /**
     * Returns the name of the REST service method
     * @return {string} method name
     */
    getMethod(): string;
    /**
     * Returns REST service URL
     * @return the URL
     */
    getEndPoint(): string;
    /**
     * Returns the request  payload
     * @return the payload
     */
    getRequestPayload(): any;
    /**
     * Set the request payload
     */
    setRequestPayload(payload: any): void;
    /**
     * Returns the response payload
     * @return the payload
     */
    getResponsePayload(): any;
    /**
     * Set the response payload
     */
    setResponsePayload(payload: any): void;
    /**
     * Adds a message to the bot response sent to the user.
     * NOTE: This method can only be used in the validateResponsePayload handler
     * @param {object} payload - can take a string message, or a message created using the MessageFactory
     */
    addMessage(payload: string | MessagePayload): void;
    /**
     * Set a transition action. When you use this function, the dialog engine will transition to the state defined for this transition action.
     * <p>
     * NOTE: This method can only be used in the validateResponsePayload handler
     * @param {string} action - name of the transition action
     */
    setTransitionAction(action: string): void;
    /**
     * Sets an LLM prompt that will be sent to the LLM
     * <p>
     * NOTE: This method can only be used in the validateResponsePayload handler
     * @param {string} prompt - the text of the prompt
     */
    setLLMPrompt(prompt: string): void;
}
