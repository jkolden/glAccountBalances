import { NonRawMessage } from '../internal';
/**
 * Represents a command message.
 * @extends NonRawMessage
 */
export declare class CommandMessage extends NonRawMessage {
    readonly type: string;
    private command;
    private properties?;
    /**
     * Creates an instance of the CommandMessage class.
     * @param {CommandType} command The command type.
     */
    constructor(command: CommandType);
    /**
     * Gets the command of the message.
     * @returns {CommandType} The command of the message.
     */
    getCommand(): CommandType;
    /**
     * Sets the command of the message.
     * @param {CommandType} command The command to set.
     * @returns {this} The updated instance of the CommandMessage.
     */
    setCommand(command: CommandType): this;
    /**
     * Gets the properties of the message.
     * @returns {Map<string, any>} The properties of the message.
     */
    getProperties(): Map<string, any>;
    /**
     * Gets the value of a property.
     * @param {string} propertyName The name of the property.
     * @returns {any} The property value.
     */
    getPropertyValue(propertyName: string): any;
    /**
     * Sets the properties of the message.
     * @param {Map<string, any>} properties The properties to set.
     * @returns {this} The updated instance of the CommandMessage.
     */
    setProperties(properties: Map<string, any>): this;
    /**
     * Add a property to the message.
     * @param {string} name The name of the property.
     * @param {any} value The value of the property.
     * @returns {this} The updated instance of the CommandMessage.
     */
    addProperty(name: string, value: any): this;
}
/**
 * Represents the type of command.
 */
export declare enum CommandType {
    repeat = "repeat",
    readToMe = "readToMe",
    speakSlowly = "speakSlowly",
    volumeUp = "volumeUp",
    volumeDown = "volumeDown",
    mute = "mute",
    unmute = "unmute",
    startDictationMode = "startDictationMode",
    stopDictationMode = "stopDictationMode",
    startAmbientMode = "startAmbientMode",
    stopAmbientMode = "stopAmbientMode",
    startAudioRecording = "startAudioRecording",
    stopAudioRecording = "stopAudioRecording",
    repeatLouder = "repeatLouder",
    repeatSlowly = "repeatSlowly",
    humanAgent = "humanAgent",
    hold = "hold",
    resume = "resume",
    goBack = "goBack",
    home = "home",
    exit = "exit",
    startDoNotDisturbMode = "startDoNotDisturbMode",
    stopDoNotDisturbMode = "stopDoNotDisturbMode"
}
