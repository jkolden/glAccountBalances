import { ReadOnlyField, Action, Voice, ChannelCustomizable } from '../internal';
/**
 * Represents a read-only form.
 * @extends ChannelCustomizable
 */
export declare class ReadOnlyForm extends ChannelCustomizable {
    private id?;
    private title?;
    private voice?;
    private fields;
    private actions?;
    /**
     * Deserialize nested object properties into corresponding class instances
     */
    deserializeNestedProperties(): void;
    /**
     * Creates an instance of the ReadOnlyForm class.
     * @param {ReadOnlyField[]} [fields] The list of fields in the read-only form.
     */
    constructor(fields?: ReadOnlyField[]);
    /**
     * Gets the ID of the read-only form.
     * @returns {string} The ID of the read-only form.
     */
    getId(): string;
    /**
     * Sets the ID of the read-only form.
     * @param {string} id The ID to set.
     * @returns {ReadOnlyForm} The updated instance of the ReadOnlyForm.
     */
    setId(id: string): this;
    /**
     * Gets the title of the read-only form.
     * @returns {string} The title of the read-only form.
     */
    getTitle(): string;
    /**
     * Sets the title of the read-only form.
     * @param {string} title The title to set.
     * @returns {ReadOnlyForm} The updated instance of the ReadOnlyForm.
     */
    setTitle(title: string): this;
    /**
     * Gets the voice settings of the read-only form.
     * @returns {Voice} the voice settings of the read-only form.
     */
    getVoice(): Voice;
    /**
     * Sets the voice settings of the read-only form.
     * @param {Voice} voice The voice to set.
     * @returns {ReadOnlyForm} The updated instance of the ReadOnlyForm.
     */
    setVoice(voice: Voice): this;
    /**
     * Gets the list of fields in the read-only form.
     * @returns {ReadOnlyField[]} The list of fields in the read-only form.
     */
    getFields(): ReadOnlyField[];
    /**
     * Sets the fields of the read-only form.
     * @param {ReadOnlyField[]} fields The fields to set.
     * @returns {ReadOnlyForm} The updated instance of the ReadOnlyForm.
     */
    setFields(fields: ReadOnlyField[]): this;
    /**
     * Adds a field to the read-only form.
     * @param {ReadOnlyField} field The field to add.
     * @returns {ReadOnlyForm} The updated instance of the ReadOnlyForm.
     */
    addField(field: ReadOnlyField): this;
    /**
     * Gets the list of actions in the read-only form.
     * @returns {Action[]} The list of actions in the read-only form.
     */
    getActions(): Action[];
    /**
     * Adds an action to the read-only form.
     * @param {Action} action The action to add.
     * @returns {ReadOnlyForm} The updated instance of the ReadOnlyForm.
     */
    addAction(action: Action): this;
}
